<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.hpe.caf</groupId>
        <artifactId>caf-maven-latest</artifactId>
        <version>1-SNAPSHOT</version>
        <relativePath>../caf-maven-latest</relativePath>
    </parent>

    <groupId>com.hpe.caf.worker</groupId>
    <artifactId>worker-jobtracking-container</artifactId>
    <version>1.7-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <version.major>1-SNAPSHOT</version.major>
        <version.major.minor>${project.version}</version.major.minor>
        <caf.worker-framework.version>10.11-SNAPSHOT</caf.worker-framework.version>
        <caf.config.impl>config-file</caf.config.impl>
        <caf.codec.impl>codec-json</caf.codec.impl>
        <caf.worker-store.impl>worker-store-cs</caf.worker-store.impl>
        <caf.worker-queue.impl>worker-queue-rabbit</caf.worker-queue.impl>
        <test.data>${project.basedir}/test-data</test.data>
        <job.database.name>jobservice</job.database.name>
        <job.database.host>jobtracking-integrationtests-postgres</job.database.host>
        <job.database.url>jdbc:postgresql://${job.database.host}:5432/${job.database.name}</job.database.url>
        <job.database.username>postgres</job.database.username>
        <job.database.password>root</job.database.password>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.hpe.caf.worker</groupId>
                <artifactId>worker-framework</artifactId>
                <version>${caf.worker-framework.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--Core worker framework dependencies and concrete implementations.-->
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>standard-worker-container</artifactId>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.github.krallin</groupId>
            <artifactId>tini</artifactId>
            <scope>runtime</scope>
            <type>exe</type>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.config</groupId>
            <artifactId>${caf.config.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>${caf.worker-store.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>${caf.worker-queue.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.codec</groupId>
            <artifactId>${caf.codec.impl}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.util</groupId>
            <artifactId>util-ref</artifactId>
        </dependency>
        <!--Worker jobtracking dependencies.-->
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-jobtracking</artifactId>
            <version>1.4-SNAPSHOT</version>
        </dependency>
        <!--Test dependencies.-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-testing-util</artifactId>
            <version>2-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-testing-integration</artifactId>
            <version>2-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker</groupId>
            <artifactId>worker-ocr-shared</artifactId>
            <version>1.2</version>
            <scope>test</scope>
        </dependency>
        <!--Certificate dependencies.-->
        <dependency>
            <groupId>com.hpe.caf</groupId>
            <artifactId>container-cert-script</artifactId>
            <type>tar.gz</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--Run integration tests.-->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <worker.adminport>${worker.adminport}</worker.adminport>
                        <rabbitmq.node.port>${rabbitmq.node.port}</rabbitmq.node.port>
                        <rabbitmq.ctrl.port>${rabbitmq.ctrl.port}</rabbitmq.ctrl.port>
                        <input.folder>${test.data}</input.folder>
                        <expected.folder>${test.data}</expected.folder>
                        <datastore.container.id>${datastore.container.id}</datastore.container.id>
                        <datastore.enabled>true</datastore.enabled>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_APPNAME>test/worker-jobtracking</CAF_APPNAME>
                        <CAF_CONFIG_PATH>${project.basedir}/test-configs</CAF_CONFIG_PATH>
                        <JOB_DATABASE_URL>jdbc:postgresql://${docker.host.address}:${postgres.db.port}/${job.database.name}</JOB_DATABASE_URL>
                        <JOB_DATABASE_USERNAME>${job.database.username}</JOB_DATABASE_USERNAME>
                        <JOB_DATABASE_PASSWORD>${job.database.password}</JOB_DATABASE_PASSWORD>
                    </environmentVariables>
                </configuration>
            </plugin>

            <!--Compile test sources.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Compile test resources.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Copies dependencies to the output lib folder.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>upload-docker-container</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <image>jobtracking-worker</image>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <watchInterval>500</watchInterval>
                    <logDate>default</logDate>
                    <images>
                        <!-- pull in a normal postgres DB for integration tests -->
                        <image>
                            <alias>${job.database.host}</alias>
                            <name>index.docker.io/postgres:9.4</name>
                            <run>
                                <ports>
                                    <port>${postgres.db.port}:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_PASSWORD>${job.database.password}</POSTGRES_PASSWORD>
                                    <POSTGRES_USER>${job.database.username}</POSTGRES_USER>
                                    <POSTGRES_DB>${job.database.name}</POSTGRES_DB>
                                </env>
                                <wait>
                                    <log>PostgreSQL init process complete</log>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <!-- Run jobservice db installer against postgres database to install jobservice schema. -->
                        <image>
                            <alias>job-service-liquibase-container</alias>
                            <name>${docker.dev.repo}/caf/job-service-db-installer:1.1</name>
                            <run>
                                <links>
                                    <link>${job.database.host}</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <cmd>java -jar /job-service-db.jar -fd -db.user ${job.database.username} -db.pass ${job.database.password} -db.name ${job.database.name} -db.connection jdbc:postgresql://${job.database.host}:5432 -log debug
                                </cmd>
                                <wait>
                                    <log>DB update finished.</log>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <!--Run RabbitMQ.-->
                        <image>
                            <alias>rabbitmq</alias>
                            <name>rabbitmq:3-management</name>
                            <run>
                                <ports>
                                    <port>${rabbitmq.ctrl.port}:15672</port>
                                    <port>${rabbitmq.node.port}:5672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <!--Image for configs.-->
                        <image>
                            <alias>config</alias>
                            <name>${project.artifactId}-test-config:${project.version}</name>
                            <build>
                                <assembly>
                                    <basedir>/config</basedir>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>test-configs</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>

                        <!--Job Tracking worker image.-->
                        <image>
                            <alias>jobtracking-worker</alias>
                            <name>${worker-jobtracking.container.name}</name>
                            <build>
                                <from>java:8</from>
                                <tags>
                                    <tag>${version.major}</tag>
                                    <tag>${version.major.minor}</tag>
                                    <tag>latest</tag>
                                </tags>
                                <labels>
                                    <caf.worker-framework.version>${caf.worker-framework.version}</caf.worker-framework.version>
                                    <caf.worker-queue.impl>${caf.worker-queue.impl}</caf.worker-queue.impl>
                                    <caf.worker-store.impl>${caf.worker-store.impl}</caf.worker-store.impl>
                                    <caf.config.impl>${caf.config.impl}</caf.config.impl>
                                    <caf.codec.impl>${caf.codec.impl}</caf.codec.impl>
                                </labels>
                                <entryPoint>
                                    <exec>
                                        <args>/maven/tini-${tini.version}.exe</args>
                                        <args>-v</args>
                                        <args>--</args>
                                    </exec>
                                </entryPoint>
                                <cmd>/maven/worker.sh</cmd>
                                <assembly>
                                    <mode>tar</mode>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>*.sh</include>
                                                </includes>
                                                <fileMode>0755</fileMode>
                                            </fileSet>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>*.yaml</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <scope>runtime</scope>
                                                <excludes>
                                                    <exclude>com.github.krallin:tini</exclude>
                                                    <exclude>com.hpe.caf:container-cert-script</exclude>
                                                </excludes>
                                            </dependencySet>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <fileMode>0755</fileMode>
                                                <includes>
                                                    <include>com.github.krallin:tini</include>
                                                </includes>
                                            </dependencySet>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <useTransitiveFiltering>true</useTransitiveFiltering>
                                                <unpack>true</unpack>
                                                <includes>
                                                    <include>com.hpe.caf:container-cert-script</include>
                                                </includes>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>${worker.adminport}:8081</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/worker-jobtracking</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                    <JOB_DATABASE_URL>${job.database.url}</JOB_DATABASE_URL>
                                    <JOB_DATABASE_USERNAME>${job.database.username}</JOB_DATABASE_USERNAME>
                                    <JOB_DATABASE_PASSWORD>${job.database.password}</JOB_DATABASE_PASSWORD>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>rabbitmq</link>
                                    <link>${job.database.host}</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${worker.adminport}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <worker.adminport>8081</worker.adminport>
                <rabbitmq.node.port>5672</rabbitmq.node.port>
                <rabbitmq.ctrl.port>15672</rabbitmq.ctrl.port>
                <postgres.db.port>5432</postgres.db.port>
            </properties>
        </profile>
        <profile>
            <id>long-running-tests</id>
            <properties>
                <test.data>${project.basedir}/test-data-long</test.data>
            </properties>
        </profile>
        <profile>
            <id>integration-test</id>
            <activation>
                <property>
                    <name>CAF_BUILD_TYPE</name>
                    <value>official</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.maven.version}</version>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>store-fs</id>
            <properties>
                <caf.worker-store.impl>worker-store-fs</caf.worker-store.impl>
                <worker-jobtracking.container.name>${docker.dev.repo}/caf/worker-jobtracking-fs</worker-jobtracking.container.name>
            </properties>
        </profile>

        <profile>
            <id>store-cs</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>CAF_BUILD_TYPE</name>
                    <value>official</value>
                </property>
            </activation>
            <properties>
                <caf.worker-store.impl>worker-store-cs</caf.worker-store.impl>
                <worker-jobtracking.container.name>${docker.dev.repo}/caf/worker-jobtracking</worker-jobtracking.container.name>
                <datastore.container.id>2f0e1a924d954ed09966f91d726e4960</datastore.container.id>
            </properties>
        </profile>
    </profiles>

    <ciManagement>
        <system>hudson</system>
        <url>http://cafbuilder.hpswlabs.hp.com:8080/job/worker-jobtracking-container/</url>
    </ciManagement>

</project>
