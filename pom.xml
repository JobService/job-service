<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hpe.caf</groupId>
    <artifactId>job-service-acceptance-tests</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <parent>
        <groupId>com.github.cafapi</groupId>
        <artifactId>caf-parent</artifactId>
        <version>1.0.0</version>
        <relativePath />
    </parent>

    <properties>
        <maven.install.skip>true</maven.install.skip>
        <maven.deploy.skip>true</maven.deploy.skip>
        <datastore.container.id>66d1c33ec8c74fee99d207e7521a93ec</datastore.container.id>
        <job.database.name>jobservice</job.database.name>
        <job.database.host>jobtracking-integrationtests-postgres</job.database.host>
        <job.database.url>jdbc:postgresql://${job.database.host}:5432/${job.database.name}</job.database.url>
        <job.database.username>postgres</job.database.username>
        <job.database.password>root</job.database.password>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.workerframework</groupId>
                <artifactId>worker-framework</artifactId>
                <version>1.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.github.krallin</groupId>
            <artifactId>tini</artifactId>
            <scope>runtime</scope>
            <type>exe</type>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.config</groupId>
            <artifactId>config-file</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-store-cs</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-queue-rabbit</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.codec</groupId>
            <artifactId>codec-json</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.cafapi.util</groupId>
            <artifactId>util-ref</artifactId>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker.batch</groupId>
            <artifactId>worker-batch-test-plugin</artifactId>
            <version>1.8.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf</groupId>
            <artifactId>job-service-client</artifactId>
            <version>1.1.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hpe.caf.worker.batch</groupId>
            <artifactId>worker-batch-shared</artifactId>
            <version>1.1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-example-shared</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-testing-util</artifactId>
            <version>1.0.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.workerframework</groupId>
            <artifactId>worker-testing-integration</artifactId>
            <version>1.0.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <!--Required at runtime for log4j output-->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <!--Required at runtime for log4j output-->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.0</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <!--ADAPTER (not bridge) that allows slf4j api to route to the log4j implm-->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.0-rc2</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <artifactId>log4j-api</artifactId>
                    <groupId>org.apache.logging.log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-api</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- End Logging -->
    </dependencies>


    <build>
        <plugins>
            <!--Run integration tests.-->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <configuration>
                    <systemPropertyVariables>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <rabbitmq.node.port>${rabbitmq.node.port}</rabbitmq.node.port>
                        <rabbitmq.ctrl.port>${rabbitmq.ctrl.port}</rabbitmq.ctrl.port>
                        <datastore.container.id>${datastore.container.id}</datastore.container.id>
                        <datastore.enabled>true</datastore.enabled>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_APPNAME>test/jobservice-acceptance</CAF_APPNAME>
                        <CAF_CONFIG_PATH>${project.basedir}/test-configs</CAF_CONFIG_PATH>
                        <CAF_WEBSERVICE_URL>http://${docker.host.address}:${jobservice.adminport}/job-service/v1</CAF_WEBSERVICE_URL>
                    </environmentVariables>
                </configuration>
            </plugin>

            <!--Compile test sources.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--Compile test resources.-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.version}</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Copying and unpacking dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Unpack batch plugins from tar so they can be pulled into the plugin container referenced by the Batch Worker image -->
                        <id>unpack-batch-plugins</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.hpe.caf.worker.batch</groupId>
                                    <artifactId>worker-batch-plugins-package</artifactId>
                                    <version>1.1.0-SNAPSHOT</version>
                                    <type>tar.gz</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/worker-batch-plugins-package-unpacked</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Docker containers -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <watchInterval>500</watchInterval>
                    <logDate>default</logDate>
                    <autoPull>always</autoPull>
                    <images>
                        <!-- Image for configs -->
                        <image>
                            <alias>config</alias>
                            <name>${project.artifactId}-test-config:${project.version}</name>
                            <build>
                                <assembly>
                                    <basedir>/config</basedir>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>test-configs</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>

                        <!-- Image for Batch Worker plugins -->
                        <image>
                            <alias>plugin</alias>
                            <name>worker-batch-container-test-plugins</name>
                            <build>
                                <assembly>
                                    <basedir>/mnt/mesos/sandbox/batch-plugins</basedir>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <includes>
                                                    <include>com.hpe.caf.worker.batch:worker-batch-test-plugin</include>
                                                </includes>
                                                <outputDirectory>/</outputDirectory>
                                                <useProjectArtifact>false</useProjectArtifact>
                                            </dependencySet>
                                        </dependencySets>
                                        <fileSets>
                                            <fileSet>
                                                <directory>${project.build.directory}/worker-batch-plugins-package-unpacked/batch-plugins</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>

                        <!-- Run a PostgreSQL DB -->
                        <image>
                            <alias>${job.database.host}</alias>
                            <name>index.docker.io/postgres:9.4</name>
                            <run>
                                <ports>
                                    <port>${postgres.db.port}:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_PASSWORD>${job.database.password}</POSTGRES_PASSWORD>
                                    <POSTGRES_USER>${job.database.username}</POSTGRES_USER>
                                    <POSTGRES_DB>${job.database.name}</POSTGRES_DB>
                                </env>
                                <wait>
                                    <log>PostgreSQL init process complete</log>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <!-- Run jobservice db installer against PostgreSQL database to install jobservice schema -->
                        <image>
                            <alias>job-service-liquibase-container</alias>
                            <name>${docker.dev.repo}/caf/job-service-db-installer:1.1</name>
                            <run>
                                <links>
                                    <link>${job.database.host}</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <cmd>java -jar /job-service-db.jar -fd -db.user ${job.database.username} -db.pass ${job.database.password} -db.name ${job.database.name} -db.connection jdbc:postgresql://${job.database.host}:5432 -log debug
                                </cmd>
                                <wait>
                                    <log>DB update finished.</log>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <!-- Run RabbitMQ -->
                        <image>
                            <alias>rabbitmq</alias>
                            <name>rabbitmq:3-management</name>
                            <run>
                                <ports>
                                    <port>${rabbitmq.ctrl.port}:15672</port>
                                    <port>${rabbitmq.node.port}:5672</port>
                                </ports>
                                <wait>
                                    <log>Server startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                        <!-- Run the Job Service -->
                        <image>
                            <alias>job-service</alias>
                            <name>${docker.dev.repo}/caf/job-service:1.1</name>
                            <run>
                                <ports>
                                    <port>${jobservice.adminport}:8080</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/jobservice</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                    <CAF_DATABASE_URL>${job.database.url}</CAF_DATABASE_URL>
                                    <CAF_DATABASE_USERNAME>${job.database.username}</CAF_DATABASE_USERNAME>
                                    <CAF_DATABASE_PASSWORD>${job.database.password}</CAF_DATABASE_PASSWORD>
                                    <CAF_TRACKING_PIPE>jobtrackingworker-test-input-1</CAF_TRACKING_PIPE>
                                    <CAF_STATUS_CHECK_TIME>1</CAF_STATUS_CHECK_TIME>
                                    <CAF_WEBSERVICE_URL>http://job-service:8080/job-service/v1</CAF_WEBSERVICE_URL>
                                    <CAF_RABBITMQ_HOST>rabbitmq</CAF_RABBITMQ_HOST>
                                    <CAF_RABBITMQ_PORT>5672</CAF_RABBITMQ_PORT>
                                    <CAF_RABBITMQ_USERNAME>guest</CAF_RABBITMQ_USERNAME>
                                    <CAF_RABBITMQ_PASSWORD>guest</CAF_RABBITMQ_PASSWORD>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>rabbitmq</link>
                                    <link>${job.database.host}</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${jobservice.adminport}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <!-- Run Job Tracking worker -->
                        <image>
                            <alias>jobtracking-worker</alias>
                            <name>${docker.dev.repo}/caf/worker-jobtracking:1.7</name>
                            <run>
                                <ports>
                                    <port>${jobtracking-worker.adminport}:8081</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/worker-jobtracking</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                    <JOB_DATABASE_URL>${job.database.url}</JOB_DATABASE_URL>
                                    <JOB_DATABASE_USERNAME>${job.database.username}</JOB_DATABASE_USERNAME>
                                    <JOB_DATABASE_PASSWORD>${job.database.password}</JOB_DATABASE_PASSWORD>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>${job.database.host}</link>
                                    <link>rabbitmq</link>
                                    <link>job-service</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${jobtracking-worker.adminport}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <!-- Run Batch worker -->
                        <image>
                            <alias>batch-worker</alias>
                            <name>${docker.dev.repo}/caf/worker-batch:1.7</name>
                            <run>
                                <ports>
                                    <port>${batch-worker.adminport}:8081</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/worker-batch</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                        <image>plugin</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>rabbitmq</link>
                                    <link>job-service</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${batch-worker.adminport}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <!-- Run Example worker -->
                        <image>
                            <alias>example-worker</alias>
                            <name>${docker.dev.repo}/caf/worker-example:1.0.0-SNAPSHOT</name>
                            <run>
                                <ports>
                                    <port>${example-worker.adminport}:8081</port>
                                </ports>
                                <env>
                                    <CAF_APPNAME>test/worker-example</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>/config</CAF_CONFIG_PATH>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>rabbitmq</link>
                                    <link>job-service</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${example-worker.adminport}</url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <rabbitmq.node.port>5672</rabbitmq.node.port>
                <rabbitmq.ctrl.port>15672</rabbitmq.ctrl.port>
                <postgres.db.port>5432</postgres.db.port>
            </properties>
        </profile>
    </profiles>

    <ciManagement>
        <system>hudson</system>
        <url>http://cafbuilder.hpeswlab.net:8080/job/job-service-acceptance-tests/</url>
    </ciManagement>

</project>
