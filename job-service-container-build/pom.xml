<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>job-service-container</artifactId>
        <groupId>com.hpe.caf</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>
    <artifactId>job-service-container-build</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.hpe.caf</groupId>
            <artifactId>job-service</artifactId>
            <version>1.0-SNAPSHOT</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>com.github.krallin</groupId>
            <artifactId>tini</artifactId>
            <scope>runtime</scope>
            <type>exe</type>
        </dependency>
        <!-- Swagger UI -->
        <dependency>
            <groupId>com.hpe.caf</groupId>
            <artifactId>job-service-ui</artifactId>
            <version>${job-service-ui.version}</version>
            <type>war</type>
        </dependency>
    </dependencies>

    <properties>
        <job-service-ui.version>1.0-SNAPSHOT</job-service-ui.version>
        <swaggerUIWarName>job-service-ui-${job-service-ui.version}</swaggerUIWarName>
        <db.name>jobservice</db.name>
    </properties>

    <profiles>
        <profile>
            <id>integration-test</id>
            <activation>
                <property>
                    <name>CAF_BUILD_TYPE</name>
                    <value>official</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker.maven.version}</version>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <webservice.adminport>25080</webservice.adminport>
                <rabbitmq.node.port>5672</rabbitmq.node.port>
                <rabbitmq.ctrl.port>15672</rabbitmq.ctrl.port>
                <postgres.db.port>5432</postgres.db.port>
                <!--<db.connection>jdbc:postgresql://${docker.host.address}:${postgres.db.port}</db.connection>-->
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Compile test sources. -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>${maven.compiler.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>test-compile</phase>-->
                        <!--<goals>-->
                            <!--<goal>testCompile</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<testCompilerArgument>-parameters</testCompilerArgument>-->
                            <!--<source>1.8</source>-->
                            <!--<target>1.8</target>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- Process the test resources, test cases. -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-resources-plugin</artifactId>-->
                <!--<version>${maven.resources.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>process-test-resources</phase>-->
                        <!--<goals>-->
                            <!--<goal>testResources</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!-- Run integration tests. -->
            <!--<plugin>-->
                <!--<artifactId>maven-failsafe-plugin</artifactId>-->
                <!--<version>${maven.failsafe.version}</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>webservice-Docker</id>-->
                        <!--<goals>-->
                            <!--<goal>integration-test</goal>-->
                            <!--<goal>verify</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--<configuration>-->
                    <!--<systemPropertyVariables>-->
                        <!--<webservice.adminport>${webservice.adminport}</webservice.adminport>-->
                        <!--<docker.host.address>${docker.host.address}</docker.host.address>-->
                        <!--<postgres.db.port>${postgres.db.port}</postgres.db.port>-->
                    <!--</systemPropertyVariables>-->
                    <!--<environmentVariables>-->
                        <!--<CAF_APPNAME>caf/job-service</CAF_APPNAME>-->
                        <!--<CAF_CONFIG_PATH>${project.basedir}/test-config</CAF_CONFIG_PATH>-->
                        <!--<webserviceurl>http://${docker.host.address}:${webservice.adminport}/${webserviceWarName}${webserviceBasePath}</webserviceurl>-->
                        <!--<database.url>jdbc:postgresql://${docker.host.address}:5432/${db.name}</database.url>-->
                        <!--<database.username>postgres</database.username>-->
                        <!--<database.password>root</database.password>-->
                        <!--<rabbitmq.host>${docker.host.address}</rabbitmq.host>-->
                        <!--<rabbitmq.port>5672</rabbitmq.port>-->
                        <!--<rabbitmq.username>user</rabbitmq.username>-->
                        <!--<rabbitmq.password>pass</rabbitmq.password>-->
                    <!--</environmentVariables>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>upload-docker-container</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <registry>${docker.dev.repo}</registry>
                            <image>job-service</image>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <registry>${docker.dev.repo}</registry>
                    <verbose>true</verbose>
                    <autoPull>on</autoPull>
                    <logDate>default</logDate>
                    <watchInterval>500</watchInterval>
                    <images>
                        <!-- pull in a normal postgres DB for integration tests -->
                        <!--<image>-->
                            <!--<alias>jobservice-integrationtests-postgres</alias>-->
                            <!--<name>index.docker.io/postgres:9.4</name>-->
                            <!--<run>-->
                                <!--<ports>-->
                                    <!--<port>${postgres.db.port}:5432</port>-->
                                <!--</ports>-->
                                <!--<env>-->
                                    <!--<POSTGRES_PASSWORD>root</POSTGRES_PASSWORD>-->
                                    <!--<POSTGRES_USER>postgres</POSTGRES_USER>-->
                                    <!--<POSTGRES_DB>${db.name}</POSTGRES_DB>-->
                                <!--</env>-->
                                <!--<wait>-->
                                    <!--<log>PostgreSQL init process complete</log>-->
                                    <!--<time>20000</time>-->
                                    <!--<shutdown>500</shutdown>-->
                                <!--</wait>-->
                                <!--<log>-->
                                    <!--<enabled>true</enabled>-->
                                <!--</log>-->
                            <!--</run>-->
                        <!--</image>-->

                        <!-- Run jobservice db installer. -->
                        <!--<image>-->
                            <!--<alias>job-service-liquibase-container</alias>-->
                            <!--<name>caf/job-service-db-installer:1.0</name>-->
                            <!--<run>-->
                                <!--<links>-->
                                    <!--<link>jobservice-integrationtests-postgres</link>-->
                                <!--</links>-->
                                <!--<log>-->
                                    <!--<enabled>true</enabled>-->
                                <!--</log>-->
                                <!--<cmd>java -jar /job-service-db.jar -fd -db.user postgres -db.pass root -db.name ${db.name} -db.connection jdbc:postgresql://boilerplate-integrationtests-postgres:5432 -log debug-->
                                <!--</cmd>-->
                                <!--<wait>-->
                                    <!--<log>DB update finished.</log>-->
                                    <!--<time>10000</time>-->
                                    <!--<shutdown>500</shutdown>-->
                                <!--</wait>-->
                            <!--</run>-->
                        <!--</image>-->
                        <!--Run rabbitmq for tests. -->
                        <!--<image>-->
                            <!--<alias>rabbitmq</alias>-->
                            <!--<name>rabbitmq:3-management</name>-->
                            <!--<run>-->
                                <!--<ports>-->
                                    <!--<port>${rabbitmq.ctrl.port}:15672</port>-->
                                    <!--<port>${rabbitmq.node.port}:5672</port>-->
                                <!--</ports>-->
                                <!--<wait>-->
                                    <!--<log>Server startup complete</log>-->
                                    <!--<http>-->
                                        <!--<url>http://${docker.host.address}:${rabbitmq.ctrl.port}</url>-->
                                    <!--</http>-->
                                    <!--<time>120000</time>-->
                                    <!--<shutdown>500</shutdown>-->
                                <!--</wait>-->
                                <!--<log>-->
                                    <!--<enabled>true</enabled>-->
                                <!--</log>-->
                            <!--</run>-->
                        <!--</image>-->
                        <!--Build image for config files-->
                        <image>
                            <alias>config</alias>
                            <name>${project.artifactId}-test-config:${project.version}</name>
                            <build>
                                <maintainer>conal.smith@hpe.com</maintainer>
                                <assembly>
                                    <basedir>/config</basedir>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <directory>test-config</directory>
                                                <outputDirectory>/</outputDirectory>
                                                <includes>
                                                    <include>*</include>
                                                </includes>
                                            </fileSet>
                                        </fileSets>
                                    </inline>
                                </assembly>
                            </build>
                        </image>
                        <image>
                            <alias>job-service</alias>
                            <name>${job-service.container.name}</name>
                            <build>
                                <maintainer>conal.smith@hpe.com</maintainer>
                                <from>${tomcatBaseImage}</from>
                                <tags>
                                    <tag>${version.major}</tag>
                                    <tag>${version.major.minor}</tag>
                                    <tag>latest</tag>
                                </tags>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <entryPoint>
                                    <exec>
                                        <args>/maven/tini-${tini.version}.exe</args>
                                        <args>-v</args>
                                        <args>--</args>
                                    </exec>
                                </entryPoint>
                                <runCmds>
                                    <runCmd>mv /opt/*.war $CATALINA_HOME/webapps</runCmd>
                                </runCmds>
                                <cmd>/start.sh</cmd>
                                <assembly>
                                    <basedir>/</basedir>
                                    <mode>tar</mode>
                                    <inline>
                                        <fileSets>
                                            <fileSet>
                                                <lineEnding>unix</lineEnding>
                                                <includes>
                                                    <include>*.sh</include>
                                                </includes>
                                                <fileMode>0755</fileMode>
                                            </fileSet>
                                        </fileSets>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectArtifact>true</useProjectArtifact>
                                                <includes>
                                                    <include>com.hpe.caf:job-service</include>
                                                </includes>
                                                <outputDirectory>/opt</outputDirectory>
                                                <outputFileNameMapping>${webserviceWarName}.war</outputFileNameMapping>
                                            </dependencySet>
                                            <dependencySet>
                                                <useProjectArtifact>true</useProjectArtifact>
                                                <includes>
                                                    <include>com.hpe.caf:job-service-ui</include>
                                                </includes>
                                                <outputDirectory>/opt</outputDirectory>
                                                <outputFileNameMapping>${swaggerUIWarName}.war</outputFileNameMapping>
                                            </dependencySet>
                                            <dependencySet>
                                                <useProjectArtifact>false</useProjectArtifact>
                                                <fileMode>0755</fileMode>
                                                <includes>
                                                    <include>com.github.krallin:tini</include>
                                                </includes>
                                                <outputDirectory>/maven</outputDirectory>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>${webservice.adminport}:8080</port>
                                </ports>
                                <env>
                                    <!-- When the container is deployed in Marathon it will use the environment variable values specified in the container json. -->
                                    <CAF_APPNAME>caf/job-service</CAF_APPNAME>
                                    <CAF_CONFIG_PATH>${project.basedir}/config</CAF_CONFIG_PATH>
                                    <database.url>jdbc:postgresql://${docker.host.address}:5432/${db.name}</database.url>
                                    <database.username>postgres</database.username>
                                    <database.password>pssword</database.password>
                                    <rabbitmq.host>rabbitmq</rabbitmq.host>
                                    <rabbitmq.port>5672</rabbitmq.port>
                                    <rabbitmq.username>user</rabbitmq.username>
                                    <rabbitmq.password>pass</rabbitmq.password>
                                </env>
                                <volumes>
                                    <from>
                                        <image>config</image>
                                    </from>
                                </volumes>
                                <links></links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>
                                            http://${docker.host.address}:${webservice.adminport}
                                        </url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>