/*
 * Copyright 2016-2023 Open Text.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Job Service
 * Allows background operations to be sent to the workers, and for the operations to be tracked and controlled.  You can check the progress of operations, and request to cancel, pause, or resume them. The primary use of this functionality is batch document processing.  The service can send work to the Batch Worker, and then track the progress of that work.
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.hpe.caf.services.job.api.generated.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.JsonNode;
import io.swagger.annotations.ApiModelProperty;

/**
 * Defines how the job should be executed, using a specific job type configured on the service.
 */
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2019-06-10T17:07:29.912+01:00[Europe/London]")public class RestrictedTask {
  @JsonProperty("typeId")
  private String typeId = null;

  @JsonProperty("parameters")
  private JsonNode parameters = null;

  public RestrictedTask typeId(String typeId) {
    this.typeId = typeId;
    return this;
  }

  @JsonProperty("typeId")
  @ApiModelProperty(required = true, value = "")
  public String getTypeId() {
    return typeId;
  }

  public void setTypeId(String typeId) {
    this.typeId = typeId;
  }

  public RestrictedTask parameters(JsonNode parameters) {
    this.parameters = parameters;
    return this;
  }

  @JsonProperty("parameters")
  @ApiModelProperty(value = "")
  public JsonNode getParameters() {
    return parameters;
  }

  public void setParameters(JsonNode parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestrictedTask restrictedTask = (RestrictedTask) o;
    return Objects.equals(this.typeId, restrictedTask.typeId) &&
        Objects.equals(this.parameters, restrictedTask.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeId, parameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestrictedTask {\n");

    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
